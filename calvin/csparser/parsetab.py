
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '25D764015B656BCE23DBD9DFB28DADAE'
    
_lr_action_items = {'GROUP':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,42,43,44,46,47,49,51,55,56,63,65,67,73,82,95,97,98,100,101,103,104,107,109,110,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,188,],[-2,-2,-6,-3,-4,-11,18,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,18,-24,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,-7,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-12,]),'LPAREN':([13,15,16,38,65,69,70,87,89,90,94,95,124,126,127,130,150,151,179,186,],[-79,58,-101,-2,-65,93,-33,-100,126,126,133,-64,126,126,153,-32,126,126,-2,189,]),'NUMBER':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,95,97,98,100,101,103,104,105,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,149,155,158,159,164,165,166,169,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,43,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,43,43,-24,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,43,-23,-66,-65,-78,-81,43,-98,-7,-64,-60,-48,-44,-38,-47,-36,137,43,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,43,-49,43,-96,-105,-34,-43,-45,-103,-104,-106,43,-31,-109,-2,43,-13,-14,-16,43,-17,-18,-20,-19,-15,-12,-35,]),'NULL':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,95,97,98,100,101,103,104,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,149,155,158,159,164,165,166,169,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,30,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,30,30,-24,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,30,-23,-66,-65,-78,-81,30,-98,-7,-64,-60,-48,-44,-38,-47,-36,30,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,30,-49,30,-96,-105,-34,-43,-45,-103,-104,-106,30,-31,-109,-2,30,-13,-14,-16,30,-17,-18,-20,-19,-15,-12,-35,]),'TRUE':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,95,97,98,100,101,103,104,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,149,155,158,159,164,165,166,169,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,25,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,25,25,-24,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,25,-23,-66,-65,-78,-81,25,-98,-7,-64,-60,-48,-44,-38,-47,-36,25,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,25,-49,25,-96,-105,-34,-43,-45,-103,-104,-106,25,-31,-109,-2,25,-13,-14,-16,25,-17,-18,-20,-19,-15,-12,-35,]),'DOT':([0,2,3,4,5,7,9,10,11,12,13,15,16,20,21,22,23,24,25,26,27,28,29,30,33,36,39,42,43,44,46,47,49,51,55,56,63,65,67,73,74,77,80,81,82,87,94,95,97,98,100,101,103,104,107,108,109,110,113,114,115,117,118,119,122,123,125,127,128,129,134,135,136,142,145,149,155,158,159,161,164,165,166,170,171,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,35,-8,-9,-5,-79,59,-101,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,35,-24,72,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,35,35,35,35,-7,-100,59,-64,-60,-48,-44,-38,-47,-36,-53,35,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,35,-58,72,-49,35,-105,-34,-43,-45,-62,-103,-104,-106,-31,-63,-109,-2,35,-13,-14,-16,35,-17,-18,-20,-19,-15,-12,-35,]),'RBRACE':([20,23,24,25,27,29,30,42,43,46,48,51,65,73,75,76,95,97,98,100,101,103,104,107,109,110,111,113,114,115,117,118,119,135,142,143,155,158,159,162,170,180,181,182,183,184,185,187,191,],[-80,-83,-84,-88,-85,-82,-90,-87,-86,-42,-2,-89,-65,-81,110,-94,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-93,-41,-52,-99,-40,-39,-37,-58,-49,-92,-34,-43,-45,-95,-31,-16,188,-17,-18,-20,-19,-15,-35,]),'RPAREN':([13,20,21,23,24,25,27,29,30,42,43,51,55,58,73,83,84,85,86,93,110,115,123,127,131,132,133,147,149,152,153,154,157,164,165,166,167,168,173,174,189,190,],[-79,-80,-71,-83,-84,-88,-85,-82,-90,-87,-86,-89,-72,-2,-81,-73,121,-76,-74,-2,-91,-99,-108,-107,155,-69,-2,-75,-105,166,-2,-68,170,-103,-104,-106,173,-67,-109,-70,-2,191,]),'DOCSTRING':([175,],[177,]),'RULE':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,42,43,44,46,47,49,51,55,56,63,65,67,73,82,95,97,98,100,101,103,104,107,109,110,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,188,],[-2,-2,-6,-3,-4,-11,31,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,31,-24,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,-7,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-12,]),'RARROW':([83,85,86,121,147,148,],[-73,-76,-74,-2,-75,163,]),'COLON':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,39,42,43,44,46,47,49,51,55,56,60,61,63,65,66,67,73,82,95,97,98,100,101,103,104,106,107,109,110,112,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,34,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,34,-24,71,-87,-86,-25,-42,-26,-27,-89,-72,-10,88,89,-23,-65,90,-78,-81,-7,-64,-60,-48,-44,-38,-47,-36,34,-53,-46,-91,144,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-2,34,-13,-14,-16,34,-17,-18,-20,-19,-15,-12,-35,]),'APPLY':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,42,43,44,46,47,49,51,55,56,63,65,67,73,82,95,97,98,100,101,103,104,107,109,110,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,188,],[-2,-2,-6,-3,-4,-11,37,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,37,-24,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,-7,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-12,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,42,43,44,46,47,49,51,55,56,57,58,59,63,64,65,67,68,71,72,73,74,77,80,81,82,88,89,90,91,93,95,97,98,99,100,101,102,103,104,106,107,108,109,110,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,137,138,139,140,142,145,149,150,151,153,154,155,157,158,159,161,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,],[-2,-2,-6,-3,-4,13,-11,16,39,-8,-9,-5,-79,13,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,13,13,39,13,65,-24,13,-87,-86,-25,-42,-26,-27,-89,-72,-10,13,85,87,-23,-66,-65,-78,92,16,95,-81,-2,-2,-2,-2,-7,13,13,13,13,-2,-64,-60,-48,136,-44,-38,-55,-47,-36,13,-53,-2,-46,-91,-41,-52,-99,-40,-39,-37,147,85,-111,-108,13,-102,13,-107,-110,-77,13,-69,-2,-2,-58,-56,-57,-54,13,-49,-2,-105,13,13,-2,-68,-34,13,-43,-45,-62,85,-103,-104,-106,13,-67,13,-31,-63,-109,-70,-2,39,-13,-14,-16,39,-17,-18,-20,-19,-15,-12,-2,13,-35,]),'$end':([0,1,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,40,41,42,43,44,46,47,49,51,55,56,63,65,67,73,82,95,97,98,100,101,103,104,107,109,110,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,188,],[-2,0,-2,-6,-3,-4,-11,-2,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,-21,-24,-1,-22,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,-7,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-12,]),'GT':([13,17,19,20,21,23,24,25,27,29,30,38,39,42,43,45,46,50,51,53,54,55,62,65,73,95,110,115,179,],[-79,-61,-50,-80,-71,-83,-84,-88,-85,-82,-90,-59,-79,-87,-86,74,-42,77,-89,80,81,-72,-51,-65,-81,-64,-91,-99,-61,]),'UNOT':([89,90,124,126,150,151,],[124,124,124,124,124,124,]),'STRING':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,48,49,51,52,55,56,57,63,64,65,67,73,75,76,78,79,82,95,97,98,100,101,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,143,144,146,149,155,158,159,162,164,165,166,169,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,20,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,20,20,-24,73,-86,-25,-42,-26,-2,-27,-89,-2,-72,-10,20,-23,-66,-65,-78,-81,20,-94,20,-98,-7,-64,-60,-48,-44,-38,-47,-36,138,20,-53,-46,-91,-93,73,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,20,-49,-92,20,-96,-105,-34,-43,-45,-95,-103,-104,-106,20,-31,-109,-2,20,-13,-14,-16,20,-17,-18,-20,-19,-15,-12,-35,]),'RBRACK':([20,23,24,25,27,29,30,42,43,51,52,73,78,79,92,110,115,116,146,],[-80,-83,-84,-88,-85,-82,-90,-87,-86,-89,-2,-81,115,-98,130,-91,-99,-97,-96,]),'VOIDPORT':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,33,36,42,43,44,46,47,49,51,55,56,63,65,67,73,74,81,82,95,97,98,100,101,103,104,107,109,110,113,114,115,117,118,119,122,123,125,127,128,129,135,142,149,155,158,159,164,165,166,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,46,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,46,-24,-87,-86,-25,-42,-26,-27,-89,-72,-10,-23,-65,-78,-81,46,46,-7,-64,-60,-48,-44,-38,-47,-36,-53,-46,-91,-41,-52,-99,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,-49,-105,-34,-43,-45,-103,-104,-106,-31,-109,-2,46,-13,-14,-16,46,-17,-18,-20,-19,-15,-12,-35,]),'COMMA':([13,20,21,23,24,25,27,29,30,42,43,51,55,65,66,67,73,83,85,95,96,97,98,100,103,107,109,110,111,113,114,115,116,117,118,122,129,135,142,147,154,158,159,162,174,],[-79,-80,-71,-83,-84,-88,-85,-82,-90,-87,-86,-89,-72,-65,91,-78,-81,120,-76,-64,134,-60,-48,-44,-47,-53,-52,-91,143,145,-52,-99,146,145,145,91,-77,-58,-49,-75,168,-43,-52,-95,-70,]),'AT':([74,77,80,81,108,134,145,161,171,],[105,105,105,105,105,105,105,-62,-63,]),'SLASH':([13,20,21,23,24,25,27,29,30,42,43,51,55,73,74,77,80,81,110,115,134,141,145,160,],[-79,-80,-71,-83,-84,-88,-85,-82,-90,-87,-86,-89,-72,-81,106,106,106,106,-91,-99,106,161,106,171,]),'EQ':([13,14,156,],[-79,57,169,]),'AND':([13,123,125,127,128,149,152,164,165,166,173,],[-79,-108,150,-107,150,-105,150,-103,150,-106,-109,]),'LBRACE':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,83,85,86,95,97,98,100,101,103,104,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,147,149,155,158,159,163,164,165,166,169,170,172,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,48,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,48,48,-24,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,48,-23,-66,-65,-78,-81,48,-98,-7,-73,-76,-74,-64,-60,-48,-44,-38,-47,-36,48,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,48,-49,48,-96,-75,-105,-34,-43,-45,-2,-103,-104,-106,48,-31,175,-109,-2,48,-13,-14,-16,48,-17,-18,-20,-19,-15,-12,-35,]),'FALSE':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,95,97,98,100,101,103,104,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,149,155,158,159,164,165,166,169,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,51,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,51,51,-24,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,51,-23,-66,-65,-78,-81,51,-98,-7,-64,-60,-48,-44,-38,-47,-36,51,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,51,-49,51,-96,-105,-34,-43,-45,-103,-104,-106,51,-31,-109,-2,51,-13,-14,-16,51,-17,-18,-20,-19,-15,-12,-35,]),'COMPONENT':([0,2,3,4,5,7,10,12,13,20,21,23,24,25,27,29,30,42,43,51,55,56,73,82,110,115,188,],[-2,8,-6,-3,-4,-11,8,-5,-79,-80,-71,-83,-84,-88,-85,-82,-90,-87,-86,-89,-72,-10,-81,-7,-91,-99,-12,]),'LBRACK':([0,2,3,4,5,7,9,10,11,12,13,20,21,22,23,24,25,26,27,28,29,30,32,33,36,38,42,43,44,46,47,49,51,52,55,56,57,63,64,65,67,73,78,79,82,95,97,98,100,101,103,104,106,107,109,110,113,114,115,116,117,118,119,122,123,125,127,128,129,135,140,142,144,146,149,155,158,159,164,165,166,169,170,173,175,176,177,178,179,180,181,182,183,184,185,187,188,191,],[-2,-2,-6,-3,-4,-11,52,-8,-9,-5,-79,-80,-71,-30,-83,-84,-88,-28,-85,-29,-82,-90,52,52,-24,68,-87,-86,-25,-42,-26,-27,-89,-2,-72,-10,52,-23,-66,-65,-78,-81,52,-98,-7,-64,-60,-48,-44,-38,-47,-36,52,-53,-46,-91,-41,-52,-99,-97,-40,-39,-37,-111,-108,-102,-107,-110,-77,-58,52,-49,52,-96,-105,-34,-43,-45,-103,-104,-106,52,-31,-109,-2,52,-13,-14,68,-16,52,-17,-18,-20,-19,-15,-12,-35,]),'DEFINE':([0,3,4,12,13,20,21,23,24,25,27,29,30,42,43,51,55,73,82,110,115,],[6,-6,6,-5,-79,-80,-71,-83,-84,-88,-85,-82,-90,-87,-86,-89,-72,-81,-7,-91,-99,]),'OR':([13,123,125,127,128,149,152,164,165,166,173,],[-79,-108,151,-107,151,-105,151,-103,-104,-106,-109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inport_list':([74,77,80,81,],[96,113,117,118,]),'unqualified_port':([9,33,74,77,80,81,108,134,145,176,181,],[17,17,97,97,97,97,97,97,97,179,179,]),'comp_statement':([176,181,],[180,187,]),'argument':([9,32,33,57,106,140,169,176,181,],[19,62,19,82,141,160,174,19,19,]),'opt_constdefs':([0,],[2,]),'dictionary':([9,32,33,57,78,106,140,144,169,176,181,],[29,29,29,29,29,29,29,29,29,29,29,]),'rule':([89,90,124,126,150,151,],[125,128,149,152,164,165,]),'opt_compdefs':([2,],[9,]),'apply':([9,33,],[22,22,]),'array':([9,32,33,57,78,106,140,144,169,176,181,],[23,23,23,23,23,23,23,23,23,23,23,]),'null':([9,32,33,57,78,106,140,144,169,176,181,],[27,27,27,27,27,27,27,27,27,27,27,]),'transformed_inport':([74,77,80,81,134,145,],[98,98,98,98,98,98,]),'define_rule':([9,33,],[26,26,]),'real_inport_list':([74,],[101,]),'member':([75,],[111,]),'group':([9,33,],[28,28,]),'compdef':([2,10,],[7,56,]),'script':([0,],[1,]),'opt_tag':([74,77,80,81,108,134,145,],[99,99,99,99,99,99,99,]),'argnames':([58,121,163,],[83,83,83,]),'inport':([74,77,80,81,134,145,],[100,100,100,100,158,158,]),'label':([9,33,106,176,181,],[32,32,140,32,32,]),'opt_direction':([38,179,],[69,186,]),'program':([9,],[33,]),'bool':([9,32,33,57,78,106,140,144,169,176,181,],[24,24,24,24,24,24,24,24,24,24,24,]),'statement':([9,33,],[36,63,]),'qualified_port':([9,33,99,176,181,],[38,38,135,38,38,]),'opt_program':([9,],[40,]),'empty':([0,2,9,38,48,52,58,74,77,80,81,93,108,121,133,134,145,153,163,175,179,189,],[5,11,41,70,76,79,86,102,102,102,102,132,102,86,132,102,102,132,86,178,70,132,]),'implicit_outport':([9,33,176,181,],[53,53,53,53,]),'compdefs':([2,],[10,]),'predicate':([89,90,124,126,150,151,],[123,123,123,123,123,123,]),'named_arg':([131,157,167,190,],[154,154,154,154,]),'real_or_internal_inport':([74,77,80,81,108,134,145,],[103,103,103,103,142,103,103,]),'string':([9,32,33,57,75,78,106,140,144,169,176,181,],[42,42,42,42,112,42,42,42,42,42,42,42,]),'qualified_name':([8,71,],[15,94,]),'assignment':([9,33,176,181,],[44,44,182,182,]),'void':([9,33,74,81,176,181,],[45,45,104,119,45,45,]),'docstring':([175,],[176,]),'tag_value':([105,],[139,]),'port_property':([9,33,176,181,],[47,47,183,183,]),'link':([9,33,176,181,],[49,49,184,184,]),'named_args':([93,133,153,189,],[131,157,167,190,]),'members':([48,],[75,]),'constdefs':([0,],[4,]),'internal_port_property':([176,181,],[185,185,]),'internal_outport':([9,33,176,181,],[50,50,50,50,]),'port_transform':([74,77,80,81,134,145,],[108,108,108,108,108,108,]),'identifiers':([37,88,],[66,122,]),'internal_inport':([74,77,80,81,108,134,145,],[107,107,107,107,107,107,107,]),'value':([9,32,33,57,78,106,140,144,169,176,181,],[21,21,21,21,116,21,21,162,21,21,21,]),'values':([52,],[78,]),'constdef':([0,4,],[3,12,]),'opt_argnames':([58,121,163,],[84,148,172,]),'comp_statements':([176,],[181,]),'real_outport':([9,33,176,181,],[54,54,54,54,]),'identifier':([6,9,18,31,32,33,34,37,57,88,89,90,91,106,124,126,131,140,150,151,157,167,169,176,181,190,],[14,55,60,61,55,55,64,67,55,67,127,127,129,55,127,127,156,55,127,127,156,156,55,55,55,156,]),'real_inport':([74,77,80,81,108,134,145,],[109,114,114,114,114,159,114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> opt_constdefs opt_compdefs opt_program','script',3,'p_script','parser.py',51),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',57),
  ('opt_constdefs -> constdefs','opt_constdefs',1,'p_opt_constdefs','parser.py',61),
  ('opt_constdefs -> empty','opt_constdefs',1,'p_opt_constdefs','parser.py',62),
  ('constdefs -> constdefs constdef','constdefs',2,'p_constdefs','parser.py',67),
  ('constdefs -> constdef','constdefs',1,'p_constdefs','parser.py',68),
  ('constdef -> DEFINE identifier EQ argument','constdef',4,'p_constdef','parser.py',76),
  ('opt_compdefs -> compdefs','opt_compdefs',1,'p_opt_compdefs','parser.py',82),
  ('opt_compdefs -> empty','opt_compdefs',1,'p_opt_compdefs','parser.py',83),
  ('compdefs -> compdefs compdef','compdefs',2,'p_compdefs','parser.py',87),
  ('compdefs -> compdef','compdefs',1,'p_compdefs','parser.py',88),
  ('compdef -> COMPONENT qualified_name LPAREN opt_argnames RPAREN opt_argnames RARROW opt_argnames LBRACE docstring comp_statements RBRACE','compdef',12,'p_compdef','parser.py',96),
  ('docstring -> DOCSTRING','docstring',1,'p_docstring','parser.py',101),
  ('docstring -> empty','docstring',1,'p_docstring','parser.py',102),
  ('comp_statements -> comp_statements comp_statement','comp_statements',2,'p_comp_statements','parser.py',106),
  ('comp_statements -> comp_statement','comp_statements',1,'p_comp_statements','parser.py',107),
  ('comp_statement -> assignment','comp_statement',1,'p_comp_statement','parser.py',114),
  ('comp_statement -> port_property','comp_statement',1,'p_comp_statement','parser.py',115),
  ('comp_statement -> internal_port_property','comp_statement',1,'p_comp_statement','parser.py',116),
  ('comp_statement -> link','comp_statement',1,'p_comp_statement','parser.py',117),
  ('opt_program -> program','opt_program',1,'p_opt_program','parser.py',121),
  ('opt_program -> empty','opt_program',1,'p_opt_program','parser.py',122),
  ('program -> program statement','program',2,'p_program','parser.py',126),
  ('program -> statement','program',1,'p_program','parser.py',127),
  ('statement -> assignment','statement',1,'p_statement','parser.py',134),
  ('statement -> port_property','statement',1,'p_statement','parser.py',135),
  ('statement -> link','statement',1,'p_statement','parser.py',136),
  ('statement -> define_rule','statement',1,'p_statement','parser.py',137),
  ('statement -> group','statement',1,'p_statement','parser.py',138),
  ('statement -> apply','statement',1,'p_statement','parser.py',139),
  ('assignment -> IDENTIFIER COLON qualified_name LPAREN named_args RPAREN','assignment',6,'p_assignment','parser.py',144),
  ('opt_direction -> LBRACK IDENTIFIER RBRACK','opt_direction',3,'p_opt_direction','parser.py',149),
  ('opt_direction -> empty','opt_direction',1,'p_opt_direction','parser.py',150),
  ('port_property -> qualified_port opt_direction LPAREN named_args RPAREN','port_property',5,'p_port_property','parser.py',164),
  ('internal_port_property -> unqualified_port opt_direction LPAREN named_args RPAREN','internal_port_property',5,'p_internal_port_property','parser.py',170),
  ('link -> void GT void','link',3,'p_link_error','parser.py',176),
  ('link -> real_outport GT void','link',3,'p_link','parser.py',184),
  ('link -> void GT real_inport_list','link',3,'p_link','parser.py',185),
  ('link -> real_outport GT inport_list','link',3,'p_link','parser.py',186),
  ('link -> implicit_outport GT inport_list','link',3,'p_link','parser.py',187),
  ('link -> internal_outport GT inport_list','link',3,'p_link','parser.py',188),
  ('void -> VOIDPORT','void',1,'p_void','parser.py',193),
  ('inport_list -> inport_list COMMA inport','inport_list',3,'p_inport_list','parser.py',197),
  ('inport_list -> inport','inport_list',1,'p_inport_list','parser.py',198),
  ('real_inport_list -> inport_list COMMA real_inport','real_inport_list',3,'p_real_inport_list','parser.py',208),
  ('real_inport_list -> real_inport','real_inport_list',1,'p_real_inport_list','parser.py',209),
  ('inport -> real_or_internal_inport','inport',1,'p_inport','parser.py',218),
  ('inport -> transformed_inport','inport',1,'p_inport','parser.py',219),
  ('transformed_inport -> port_transform real_or_internal_inport','transformed_inport',2,'p_transformed_inport','parser.py',223),
  ('implicit_outport -> argument','implicit_outport',1,'p_implicit_outport','parser.py',228),
  ('implicit_outport -> label argument','implicit_outport',2,'p_implicit_outport','parser.py',229),
  ('real_or_internal_inport -> real_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',234),
  ('real_or_internal_inport -> internal_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',235),
  ('opt_tag -> AT tag_value','opt_tag',2,'p_opt_tag','parser.py',239),
  ('opt_tag -> empty','opt_tag',1,'p_opt_tag','parser.py',240),
  ('tag_value -> NUMBER','tag_value',1,'p_tag_value','parser.py',244),
  ('tag_value -> STRING','tag_value',1,'p_tag_value','parser.py',245),
  ('real_inport -> opt_tag qualified_port','real_inport',2,'p_real_inport','parser.py',250),
  ('real_outport -> qualified_port','real_outport',1,'p_real_outport','parser.py',255),
  ('internal_inport -> unqualified_port','internal_inport',1,'p_internal_inport','parser.py',261),
  ('internal_outport -> unqualified_port','internal_outport',1,'p_internal_outport','parser.py',267),
  ('port_transform -> SLASH argument SLASH','port_transform',3,'p_port_transform','parser.py',273),
  ('port_transform -> SLASH label argument SLASH','port_transform',4,'p_port_transform','parser.py',274),
  ('qualified_port -> IDENTIFIER DOT IDENTIFIER','qualified_port',3,'p_qualified_port','parser.py',278),
  ('unqualified_port -> DOT IDENTIFIER','unqualified_port',2,'p_unqualified_port','parser.py',282),
  ('label -> COLON identifier','label',2,'p_label','parser.py',287),
  ('named_args -> named_args named_arg COMMA','named_args',3,'p_named_args','parser.py',291),
  ('named_args -> named_args named_arg','named_args',2,'p_named_args','parser.py',292),
  ('named_args -> empty','named_args',1,'p_named_args','parser.py',293),
  ('named_arg -> identifier EQ argument','named_arg',3,'p_named_arg','parser.py',297),
  ('argument -> value','argument',1,'p_argument','parser.py',302),
  ('argument -> identifier','argument',1,'p_argument','parser.py',303),
  ('opt_argnames -> argnames','opt_argnames',1,'p_opt_argnames','parser.py',308),
  ('opt_argnames -> empty','opt_argnames',1,'p_opt_argnames','parser.py',309),
  ('argnames -> argnames COMMA IDENTIFIER','argnames',3,'p_argnames','parser.py',314),
  ('argnames -> IDENTIFIER','argnames',1,'p_argnames','parser.py',315),
  ('identifiers -> identifiers COMMA identifier','identifiers',3,'p_identifiers','parser.py',325),
  ('identifiers -> identifier','identifiers',1,'p_identifiers','parser.py',326),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',331),
  ('string -> STRING','string',1,'p_string','parser.py',337),
  ('string -> string STRING','string',2,'p_string','parser.py',338),
  ('value -> dictionary','value',1,'p_value','parser.py',342),
  ('value -> array','value',1,'p_value','parser.py',343),
  ('value -> bool','value',1,'p_value','parser.py',344),
  ('value -> null','value',1,'p_value','parser.py',345),
  ('value -> NUMBER','value',1,'p_value','parser.py',346),
  ('value -> string','value',1,'p_value','parser.py',347),
  ('bool -> TRUE','bool',1,'p_bool','parser.py',352),
  ('bool -> FALSE','bool',1,'p_bool','parser.py',353),
  ('null -> NULL','null',1,'p_null','parser.py',358),
  ('dictionary -> LBRACE members RBRACE','dictionary',3,'p_dictionary','parser.py',363),
  ('members -> members member COMMA','members',3,'p_members','parser.py',368),
  ('members -> members member','members',2,'p_members','parser.py',369),
  ('members -> empty','members',1,'p_members','parser.py',370),
  ('member -> string COLON value','member',3,'p_member','parser.py',374),
  ('values -> values value COMMA','values',3,'p_values','parser.py',379),
  ('values -> values value','values',2,'p_values','parser.py',380),
  ('values -> empty','values',1,'p_values','parser.py',381),
  ('array -> LBRACK values RBRACK','array',3,'p_array','parser.py',385),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',389),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',390),
  ('define_rule -> RULE identifier COLON rule','define_rule',4,'p_define_rule','parser.py',421),
  ('rule -> rule AND rule','rule',3,'p_combine_rule','parser.py',425),
  ('rule -> rule OR rule','rule',3,'p_combine_rule','parser.py',426),
  ('rule -> UNOT rule','rule',2,'p_negate_rule','parser.py',430),
  ('rule -> LPAREN rule RPAREN','rule',3,'p_subrule','parser.py',434),
  ('rule -> identifier','rule',1,'p_rule','parser.py',438),
  ('rule -> predicate','rule',1,'p_rule','parser.py',439),
  ('predicate -> identifier LPAREN named_args RPAREN','predicate',4,'p_predicate','parser.py',443),
  ('apply -> APPLY identifiers COLON rule','apply',4,'p_apply','parser.py',447),
  ('group -> GROUP identifier COLON identifiers','group',4,'p_group','parser.py',453),
]
